# Realizzare un programma in assembly MIPS che letto, da input, un vettore di elementi 2^-16 < x < 2^15 - 1 di lunghezza 10, utilizza una sub- routine (o funzione)
# RIPOSIZIONA che scambia le posizioni degli elementi opposti qualora siano entrambi mutipli di 2 e li mette in un nuovo vettore

.data
vettore: .space 40
vettore2: .space 40
lunghezza: .word 10

.text
.globl main

main:
    # Leggi il vettore da input
    li $t0, 0
    la $t1, vettore
input_loop:
    li $v0, 5
    syscall
    sw $v0, 0($t1)
    addi $t0, $t0, 1
    addi $t1, $t1, 4
    li $t2, 10
    blt $t0, $t2, input_loop

    # Chiama la subroutine RIPOSIZIONA
    la $a0, vettore
    la $a1, vettore2
    jal RIPOSIZIONA

    # Stampa il vettore risultante
    li $t0, 0
    la $t1, vettore2
print_loop:
    lw $a0, 0($t1)
    li $v0, 1
    syscall
    addi $t0, $t0, 1
    addi $t1, $t1, 4
    blt $t0, $t2, print_loop

    # Uscita dal programma
    li $v0, 10
    syscall

RIPOSIZIONA:
    li $t0, 0
    li $t1, 9
    li $t2, 2
loop:
    lw $t3, 0($a0)
    lw $t4, 36($a0)
    rem $t5, $t3, $t2
    rem $t6, $t4, $t2
    beqz $t5, swap
    beqz $t6, swap
    j end
swap:
    sw $t3, 36($a1)
    sw $t4, 0($a1)
end:
    addi $a0, $a0, 4
    addi $a1, $a1, -4
    addi $t0, $t0, 1
    addi $t1, $t1, -1
    bge $t0, $t1, loop
    jr $ra